name: 'Infrastructure as Code with Terraform'
on:
  push:
    branches:
      - develop
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Format
        id: fmt
        run: terraform -chdir=environments/develop fmt -check

      - name: Init
        id: init
        run: terraform -chdir=environments/develop init

      - name: Validate
        id: validate
        run: terraform -chdir=environments/develop validate -no-color

      - name: Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform -chdir=environments/develop plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Trigger Terraform Cloud run
        run: |
          curl \
          --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
          --header "Content-Type: application/vnd.api+json" \
          --request POST \
          --data '{
            "data": {
              "attributes": {
                "message": "Triggered via GitHub Actions",
                "run_reason": "plan"
              },
              "type":"runs",
              "relationships": {
                "workspace": {
                  "data": {
                    "type": "workspaces",
                    "id": "ws-g3vZ1yDjLHcuowLq"
                  }
                }
              }
            }
          }' \
          https://app.terraform.io/api/v2/runs

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
      #   run: terraform -chdir=environments/develop apply -auto-approve